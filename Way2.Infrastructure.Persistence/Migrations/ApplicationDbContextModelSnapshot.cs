// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Way2.Infrastructure.Persistence;

namespace Way2.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview9.19423.6");

            modelBuilder.Entity("Way2.Domain.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("city_id")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnName("modified_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("TEXT COLLATE LATIN1_GENERAL_CS_AI");

                    b.Property<long>("Version")
                        .HasColumnName("version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("city");
                });

            modelBuilder.Entity("Way2.Domain.Entities.CityWeather", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("city_weather_id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CityId")
                        .HasColumnName("city_id")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnName("date")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnName("modified_at")
                        .HasColumnType("TEXT");

                    b.Property<float>("Temperature")
                        .HasColumnName("temperature")
                        .HasColumnType("REAL");

                    b.Property<long>("Version")
                        .HasColumnName("version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("city_weather");
                });

            modelBuilder.Entity("Way2.Domain.Entities.CityWeather", b =>
                {
                    b.HasOne("Way2.Domain.Entities.City", "City")
                        .WithMany("WeatherHistory")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
